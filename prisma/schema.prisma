// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String         @id @default(cuid())
  name          String?
  email         String?        @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  balance       Decimal?       @default(0)
  creditCard    CreditCard[]
  transactions  Transactions[]
  categories    Category[]

  @@map(name: "users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model CreditCard {
  id     String @id @default(cuid())
  number String @unique
  limit  Float  @default(0)
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
}

model Transactions {
  id          String   @id @default(cuid())
  type        String
  value       Float
  date        DateTime
  description String?
  user        User     @relation(fields: [userId], references: [id])
  userId      String
}

model Category {
  id      Int       @id @default(autoincrement())
  name    String    @unique
  users   User[]
  expense Expense[]
}

model Expense {
  id          Int      @id @default(autoincrement())
  description String
  value       Float
  date        DateTime
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  Int
}
